$(function() {
	var scripts = document.getElementsByTagName('script');
	var sum = scripts.length;
	var url = "";
	var regex = /\S*lim.js\?\S*$/;
	for (var i = 0; i < sum; i++) {
		if (regex.exec(scripts[i].src)) {
			url = scripts[i].src;
		}
	}
	var regex = /^(\w+):\/\/([^\/:]*)(?::(\d+))?\/([^?]*)(?:\?(.*))?$/gi;
	regex.exec(url);

	
	var protocol = RegExp.$1;
	var domain = RegExp.$2;
	var port = RegExp.$3;
	var uri = RegExp.$4;
	var qstring = RegExp.$5;

	var host = protocol + '://' + domain + ':' + port;
	var wshost = 'ws://' + domain + ':' + port;

	$.ajax({
		type : 'POST',
		url : host + '/httpClient/ajaxKey.action?' + qstring + '&' + window.location.hostname,
		async : false,
		xhrFields: {withCredentials: true},
	    crossDomain: true,
		success : function(res) {

			if (res.code == 200) {
				var userconfig;
				var user = res.data;
				console.log(user.type);
				document.cookie = "JSESSIONID=" + user.sessionId+";path=/";
				console.log("user.sessionId",user.sessionId);
				$.ajax({
					type : 'GET',
					url : host+"/socket/lim.config.json?type="+user.type+"&avatar="+user.avatar+"&id="+user.id+"&host="+host+"&JS="+user.sessionId,
					async : false,
					dataType : 'json',
					success : function(res) {
						userconfig = res.data;
					}
				});

				layui.use('layim', function(layim) {
					// 基础配置
					console.log(userconfig);
					layim.config(userconfig);

					// 向后端的webSocket传递参数格式为:companyId_type_userId
					var target = wshost + '/webSocketServer.action?key=' + user.id;
					var socket = new WebSocket(target);
					// 连接成功时触发
					var msgboxCount = 0;
					socket.onopen = function() {
						$.get(host + '/chatlog/countChatlog.action', function(data, status) {
							setTimeout(function() {
								if (Number(data) > 0) {
									msgboxCount = data;
									layim.msgbox(msgboxCount);
								}
							}, 1500);
						});
					};
					
					// 每次窗口打开窗口查询离线消息
					layim.on('chatChange', function(res) {
						var type = res.data.type;
						var fromid = res.data.id;
						var avatar = res.data.avatar;
						var username = res.data.username;
						if (type == 'friend' && msgboxCount != 0) {
							$.ajax({
								type : 'POST',
								url : host + '/chatlog/readFriendChatlog.action',
								data : {
									fromid : fromid,
									id : user.id
								},
								success : function(data) {
									if (data != null && data != '') {
										$.each(JSON.parse(data), function(n, value) {
											layim.getMessage({
												username : value.username,
												avatar : value.avatar,
												id : value.id,
												type : value.type,
												content : value.content,
												timestamp : value.timestamp,
												fromid : value.fromid,
												mine : value.mine,
												system : false
											});
										});
										msgboxCount = msgboxCount - JSON.parse(data).length;
										layim.msgbox(msgboxCount);
									}
								},
								error : function() {
									layer.msg('发生错误。请重新登录。')
								}
							});
						}
						

						//快捷回复
						if(user.type === 'kefu' || user.type === 'syskefu'){
							if($(res.elem).parent().nextAll().size() == 0){
								$(res.elem).parent().css('margin-right','200px');
								$.getJSON(host + '/sysadm/thinktank/fastreply/fastreply-items.json;jsessionid='+user.sessionId, function(response){
									var $panel = $('<div class="layim-chat-panel"></div>');
									var tpl = layui.laytpl('<ul class="layui-elip">{{#  layui.each(d, function(index, item){ }}<li>{{ item.fastreplyContent }}</li>{{#  }); }}</ul>');
									tpl.render(response.data, function(result){
										$panel.append('<div class="">快捷回复</div>').append(result);
									});
									$panel.find('li').click(function(){
										//发送给对方
										$('.layim-chat-textarea').find('textarea').val($(this).text()).focus();
									});
									$(res.elem).parent().after($panel);
								});
							}
						}
					});

					// 监听收到的消息
					socket.onmessage = function(res) {
						eval('var obj =' + res.data + ';');
						if (obj != null) {
							var type = obj.type;
							var data = obj.data;
							/* 各种消息类型 */
							if (type != null && (type == 'chatMessage' || type == 'memberStatusMessage' || type == 'chatKefuMessage' || type == 'rebroadMessage')) {
								layim.getMessage(data);
							} else if (type != null && (type == 'offline' || type == 'online')) {
								var id = data.id;
								layim.setFriendStatus(id, type);
							} else if (type != null && type == 'kefuStatusMessage') {
								console.log("提示客服:"+data.content);
								if (data.content.length > 0) {
									$('#tipContent').html(data.content);
								}
								if (data.receving > 0) {
									$('#recevingCount').html(data.receving);
								}
								
							}else if (type != null && (type == 'systemTip')) {
								layer.open({
									  title: '系统提醒'
									  ,content: data.systemTip
									  ,offset: 'rb'
									  ,shade: 0
									  ,time :10000
								});  
							}
						} else {
							console.log('socket.onmessage接受到的消息为空');
						}
					};
					

					// 监听发送消息
					layim.on('sendMessage', function(res) {
						socket.send(JSON.stringify({
							type : 'chatMessage' // 随便定义，用于在服务端区分消息类型
							,
							data : res
						}));
					});
					// 状态切换
					layim.on('online', function(status) {
						if (status == 'online') { // 除非选在在线状态，其他状态全部是离线
							socket.send(JSON.stringify({
								type : 'memberStatusMessage', // 随便定义，用于在服务端区分消息类型
								data : {
									id : user.id,
									type : 'friend',
									content : 'online'
								}
							}));
						} else { // 如果是隐身或者离线，同一提示为离线
							socket.send(JSON.stringify({
								type : 'memberStatusMessage', // 随便定义，用于在服务端区分消息类型
								data : {
									id : user.id,
									system : true,
									type : 'friend',
									content : 'offline'
								}
							}));
						}
					});

					// 专为程序猿设计,发送代码
					layim.on('tool(code)', function(insert, send, obj) { // 事件中的tool为固定字符，而code则为过滤器，对应的是工具别名（alias）
						layer.prompt({
							title : '插入代码',
							formType : 2,
							shade : 0
						}, function(text, index) {
							layer.close(index);
							insert('[pre class=layui-code]' + text + '[/pre]'); // 将内容插入到编辑器，主要由insert完成
							// send(); //自动发送
						});
					});
					/* 将客户呼叫转移给其他客服 */
					layim.on('tool(rebroad)', function(insert, send, obj) { // 事件中的tool为固定字符，而code则为过滤器，对应的是工具别名（alias）
						var temp = obj.data;
						if ($('#recevingCount').html() > 0) {
							$('#recevingCount').html($('#recevingCount').html()-1);
						}
						socket.send(JSON.stringify({
							type : 'rebroadMessage', // 随便定义，用于在服务端区分消息类型
							data : {
								to : {
									id : temp.id,// 用户在layim面板中的id
									username : temp.username,// 用户名称
									avatar : temp.avatar,// 用户头像
									type : temp.type,// 消息类型
								},
								mine : {
									id : user.id,// 客服的id
									username : user.username, // 我的昵称
									content : user.id,
								}
							}
						}));
					});

					/* 完成客户咨询 */
					layim.on('tool(finish)', function(insert, send, obj) {
						var temp = obj.data;
						layer.msg("完成咨询");
						if ($('#recevingCount').html() > 0) {
							$('#recevingCount').html($('#recevingCount').html()-1);
						}
						socket.send(JSON.stringify({
							type : 'finishChatKefu',
							data : {
								to : {
									id : temp.id,
									username : temp.username,
									avatar : temp.avatar,
									type : temp.type,
								},
								mine : {
									id : user.id,
									username : user.username
								}
							}
						}));
					});
					
					//评分
					var flag =true;//标识符防止重复提交
					layim.on('tool(think)', function(insert, send, obj) { 
						var temp = obj.data;
						if(flag && temp.id!="type_system_system_0"){
							layer.open({
							   title:"打分",
							   content: '<input type="number" id="think" />', 
							   btn: ['提交', '取消'],
							   yes: function(index, layero){
								flag=false;
							    var score = $('#think').val();
							    socket.send(JSON.stringify({
									type: 'touristGiveKefuScore',//给客服评分
									data : {
											to : {
												id : temp.id,// 客服在layim面板中的id
												username : temp.username,// 用户名称
												avatar : temp.avatar,// 用户头像
												type : temp.type// 消息类型
											},
											mine : {
												id : user.id,// 游客的id
												username : user.username, // 游客昵称
												avatar:user.avatar,
												content : score
											}
									}
								}));
							    layer.close(index); 
							  }
							});
							
						}else{
							layer.msg("无法提交");
							return;
						}
					});
					
					// 留言板
					layim.on('tool(msgboard)', function(insert, send, obj) { // 事件中的tool为固定字符，而code则为过滤器，对应的是工具别名（alias）
						layer.open({
							type : 2,
							title : '留言板',
							content : host+'/socket/msgboard.html',
							btn : ['提交', '取消'],
							yes : function(index, layero) {
								var form = layer.getChildFrame('form', index);
								$.ajax({
									type : 'post',
									url : host+'/messageBoard/messageBoardModify.action',
									data : form.serialize(),
									success : function(data) {
										layer.msg(data.msg);
									}
								});
								layer.close(index);
							}
						});
					});

					// 面板外的操作
					var $ = layui.jquery, active = {
						// 咨询客服
						chatKefu : function() {
							socket.send(JSON.stringify({
								type : 'chatKefuMessage',
								data : {
									mine : {
										id : user.id,
										username : user.username,
										content : user.companyId,
									}
								}
							}));
						},
						kefuAdd : function() {
							socket.send(JSON.stringify({
								type : 'kefuAddSystemMessage', // 客服进入咨询系统服务
								data : {
									kefuId : user.id,
									systemId : systemId
								}
							}));
						},
						kefuExit : function() {
							socket.send(JSON.stringify({
								type : 'kefuExitSystemMessage', // 客服提退出咨询系统服务
								data : {
									kefuId : user.id,
									systemId : systemId
								}
							}));
						}
						,clearReceive : function() {
							$("#tipContent").html("");//清空提示内容
							$('#recevingCount').html(0);//接待数量归零
							socket.send(JSON.stringify({
								type : 'kefuClearReceiveMessage', // 客服清空当前正在接待的人员
								data : {
									to : {
										id : user.id
										,type : user.type
									}
								}
							}));
						}
					};

					$('.site-demo-layim').on('click', function() {
						var type = $(this).data('type');
						active[type] ? active[type].call(this) : '';
					});
				});

			} else {
				console.log(res.msg);
			}
		}
	});
});